from pydantic import BaseModel, Field
from typing import List, Dict, Optional
from datetime import datetime

class ResearchCoordinatorState(BaseModel):
    """
    Central workflow state for Agent 1 (Research Coordinator Agent).
    This tracks the entire multi-agent research pipeline.
    """

    # --- ðŸ”¹ User Input ---
    user_query: str = Field(..., description="The main research query provided by the user.")

    # --- ðŸ”¹ Node 1 Output: Query Decomposition ---
    decomposed_subqueries: Optional[List[str]] = Field(
        default=None,
        description="List of smaller sub-queries generated from the main query."
    )

    # --- ðŸ”¹ Node 2 Output: Task Prioritization ---
    task_plan: Optional[List[Dict[str, str]]] = Field(
        default=None,
        description="List of tasks with assigned agents and execution order."
    )

    # --- ðŸ”¹ Node 3 Output: Progress Tracking ---
    progress_status: Optional[Dict[str, Dict[str, str]]] = Field(
        default_factory=dict,
        description="Tracks each agentâ€™s current status and timestamp."
    )
    overall_completion: float = Field(
        default=0.0,
        description="Overall workflow completion percentage (0â€“100)."
    )

    # --- ðŸ”¹ Intermediate Outputs from Other Agents (2â€“5) ---
    retrieval_summary: Optional[str] = Field(
        default=None,
        description="Summary of data collected by Agent 2 (Web Scraper & Document Retrieval)."
    )
    deep_analysis: Optional[str] = Field(
        default=None,
        description="Analytical findings from Agent 3 (Deep Analysis)."
    )
    validation_report: Optional[str] = Field(
        default=None,
        description="Fact-checking results from Agent 4 (Validation)."
    )
    formatted_report: Optional[str] = Field(
        default=None,
        description="Formatted structured report from Agent 5 (Formatting)."
    )
    executive_summary: Optional[str] = Field(
        default=None,
        description="Short summary from Agent 5 (Executive Summary Generator)."
    )

    # --- ðŸ”¹ Node 4 Output: Final Synthesis ---
    final_report: Optional[str] = Field(
        default=None,
        description="Merged final report created in the synthesis step."
    )
    confidence_score: Optional[float] = Field(
        default=None,
        description="Aggregate confidence score derived from the validation agent."
    )

    # --- ðŸ”¹ System Metadata ---
    next_node: Optional[str] = Field(
        default=None,
        description="Indicates which node should run next in the workflow."
    )
    created_at: datetime = Field(
        default_factory=datetime.utcnow,
        description="Timestamp when the workflow started."
    )
    last_updated: datetime = Field(
        default_factory=datetime.utcnow,
        description="Last time the state was updated."
    )

    class Config:
        arbitrary_types_allowed = True
